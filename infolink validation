(function(document, $, Coral) {
    "use strict";

    // Wait for the content to be fully loaded before initializing
    $(document).on("foundation-contentloaded", function(e) {
        // Iterate over each element with the class .cmp-list_editor
        $(".cmp-list_editor coral-select.cq-dialog-dropdown-showhide", e.target).each(function() {
            var $element = $(this);
            var target = $element.data("cq-dialog-dropdown-showhide-target");

            if (target) {
                // Initialize the Coral component for the dropdown
                Coral.commons.ready($element[0], function(component) {
                    // Call showHide function whenever the component changes
                    component.on("change", function() {
                        showHide(component, target);
                    });

                    // Initial show/hide action for the current state of the dropdown
                    showHide(component, target);
                });
            }
        });
    });

    // Function to show/hide the new tag field based on the dropdown value
    function showHide(component, target) {
        var value = component.value;
        var $target = $(target);

        // Hide all target elements first
        $target.not(".hide").addClass("hide");

        // Show the specific target element based on the selected value
        $target.filter("[data-showhidetargetvalue='" + value + "']").removeClass("hide");
    }

    // Wait for the document to be ready before applying any tooltips
    $(document).ready(function() {
        // Apply tooltips for truncated lines, if needed
        addTooltipIfTruncatedLines(".line-clamp");
    });
})(document, Granite.$, Coral);


(function($, window, document) {
    "use strict";

    var registry = $(window).adaptTo("Foundation-registry");

    // Register the show/hide functionality for the dropdown selection
    registry.register("foundation.contentloaded", function() {
        // Iterate over each multifield item and apply the show/hide logic
        $(".cmp-list_editor coral-select.cq-dialog-dropdown-showhide", document).each(function(index, element) {
            var target = $(element).data("cq-dialog-dropdown-showhide-target");
            if (target) {
                Coral.commons.ready(element, function(component) {
                    showHide(component, target, element);  // Apply show/hide on load
                    component.on("change", function() {
                        showHide(component, target, element);  // Apply show/hide when value changes
                    });
                });
            }
        });

        // Apply showHide function for the initial state
        $(".cq-dialog-dropdown-showhide", document).each(function(index, element) {
            var target = $(element).data("cq-dialog-dropdown-showhide-target");
            if (target) {
                Coral.commons.ready(element, function(component) {
                    showHide(component, target, element);
                });
            }
        });

        // Function to show/hide elements based on the selected value
        function showHide(component, target, element) {
            var value = component.value;
            // Find the parent multifield item for this specific dropdown element
            var parentMultifield = $(element).closest(".granite-collection-item");
            var targetElement = parentMultifield.find(target);

            // Hide all target elements in the current context and then show the one that matches the selected value
            parentMultifield.find(target).addClass("hide");  // Hide all targets within the same multifield
            targetElement.filter("[data-showhidetargetvalue='" + value + "']").removeClass("hide");  // Show only the selected one
        }

        // Handle the case where the text is truncated and add a tooltip
        addTooltipIfTruncated(".line-clamp");
    });

})(jQuery, window, document);
