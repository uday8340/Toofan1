package your.package.name;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import org.apache.commons.io.IOUtils;
import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
import org.apache.sling.api.resource.Resource;
import org.apache.sling.api.resource.ResourceResolver;
import org.apache.sling.api.servlets.HttpConstants;
import org.apache.sling.api.servlets.SlingAllMethodsServlet;
import org.apache.sling.models.factory.ModelFactory;
import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.servlet.Servlet;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

@Component(service = Servlet.class,
        property = {
                "sling.servlet.paths=/bin/read-excel-json",
                "sling.servlet.methods=" + HttpConstants.METHOD_POST
        })
public class TableExcelToJsonServlet extends SlingAllMethodsServlet {

    private static final Logger LOGGER = LoggerFactory.getLogger(TableExcelToJsonServlet.class);

    @Reference
    private ModelFactory modelFactory;

    @Override
    protected void doPost(SlingHttpServletRequest request, SlingHttpServletResponse response) {
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");

        try {
            // Get uploaded file as InputStream
            InputStream inputStream = request.getRequestParameter("file").getInputStream();

            if (inputStream == null) {
                response.setStatus(SlingHttpServletResponse.SC_BAD_REQUEST);
                response.getWriter().write("{\"error\":\"No file uploaded\"}");
                return;
            }

            // Adapt resource to model
            Resource resource = request.getResource();
            TableDynamicModel model = modelFactory.createModel(resource, TableDynamicModel.class);

            if (model == null) {
                LOGGER.error("Failed to adapt resource to TableDynamicModel");
                response.setStatus(SlingHttpServletResponse.SC_INTERNAL_SERVER_ERROR);
                response.getWriter().write("{\"error\":\"Failed to process the uploaded file\"}");
                return;
            }

            // Process the file
            model.readExcelFile(inputStream, new org.apache.poi.ss.usermodel.DataFormatter());

            // Convert data to JSON
            JsonObject jsonObject = new JsonObject();
            JsonArray rowsArray = new JsonArray();

            List<ArrayList<String>> rows = model.getRowList();
            ArrayList<String> headers = model.getColumnValues();

            for (List<String> row : rows) {
                JsonObject rowJson = new JsonObject();
                for (int i = 0; i < headers.size(); i++) {
                    String header = headers.get(i);
                    String value = i < row.size() ? row.get(i) : "";
                    rowJson.addProperty(header, value);
                }
                rowsArray.add(rowJson);
            }

            jsonObject.add("rows", rowsArray);
            response.getWriter().write(new Gson().toJson(jsonObject));

        } catch (Exception e) {
            LOGGER.error("Error processing the uploaded file", e);
            response.setStatus(SlingHttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            try {
                response.getWriter().write("{\"error\":\"An error occurred while processing the file\"}");
            } catch (Exception ignored) {
                // Ignored
            }
        }
    }
}
