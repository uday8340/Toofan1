package com.example.core.servlets;

import com.google.gson.Gson;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
import org.apache.sling.api.resource.Resource;
import org.apache.sling.api.resource.ResourceResolver;
import org.apache.sling.api.servlets.SlingAllMethodsServlet;
import org.osgi.service.component.annotations.Component;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.jcr.Node;
import javax.jcr.Property;
import javax.jcr.RepositoryException;
import javax.servlet.Servlet;
import java.io.InputStream;
import java.util.*;

@Component(
    service = Servlet.class,
    property = {
        "sling.servlet.methods=GET",
        "sling.servlet.paths=/bin/custom/excel-to-json"
    }
)
public class ExcelToJsonServlet extends SlingAllMethodsServlet {

    private static final Logger LOGGER = LoggerFactory.getLogger(ExcelToJsonServlet.class);

    @Override
    protected void doGet(SlingHttpServletRequest request, SlingHttpServletResponse response) {
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");

        String resourcePath = request.getParameter("resourcePath");

        if (resourcePath == null || resourcePath.isEmpty()) {
            LOGGER.error("Resource path is missing");
            response.setStatus(SlingHttpServletResponse.SC_BAD_REQUEST);
            return;
        }

        try {
            ResourceResolver resourceResolver = request.getResourceResolver();
            Resource fileResource = resourceResolver.getResource(resourcePath + "/jcr:content");

            if (fileResource == null) {
                LOGGER.error("File resource not found at path: {}", resourcePath);
                response.setStatus(SlingHttpServletResponse.SC_NOT_FOUND);
                return;
            }

            Node fileNode = fileResource.adaptTo(Node.class);
            if (fileNode == null || !fileNode.hasProperty("jcr:data")) {
                LOGGER.error("File node or jcr:data property is missing");
                response.setStatus(SlingHttpServletResponse.SC_NOT_FOUND);
                return;
            }

            Property fileDataProperty = fileNode.getProperty("jcr:data");
            InputStream inputStream = fileDataProperty.getBinary().getStream();

            List<Map<String, String>> jsonData = parseExcelToJson(inputStream);

            Gson gson = new Gson();
            String jsonOutput = gson.toJson(jsonData);

            response.getWriter().write(jsonOutput);

        } catch (Exception e) {
            LOGGER.error("Error processing Excel file to JSON", e);
            response.setStatus(SlingHttpServletResponse.SC_INTERNAL_SERVER_ERROR);
        }
    }

    private List<Map<String, String>> parseExcelToJson(InputStream inputStream) throws Exception {
        List<Map<String, String>> jsonData = new ArrayList<>();
        try (Workbook workbook = new XSSFWorkbook(inputStream)) {
            Sheet sheet = workbook.getSheetAt(0); // Read the first sheet
            DataFormatter dataFormatter = new DataFormatter();
            Iterator<Row> rowIterator = sheet.iterator();

            List<String> headers = new ArrayList<>();

            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();
                Map<String, String> rowMap = new LinkedHashMap<>();

                for (int i = 0; i < row.getLastCellNum(); i++) {
                    Cell cell = row.getCell(i);
                    String cellValue = dataFormatter.formatCellValue(cell);
                    if (headers.isEmpty()) {
                        headers.add(cellValue); // Assume first row as headers
                    } else {
                        rowMap.put(headers.get(i), cellValue);
                    }
                }

                if (!rowMap.isEmpty()) {
                    jsonData.add(rowMap);
                }
            }
        }
        return jsonData;
    }
}




GET http://localhost:4502/bin/custom/excel-to-json?resourcePath=/content/dam/my-project/data.xlsx
