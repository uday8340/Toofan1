@Test
public void testInitWithInactiveChild() {
    try {
        when(resourceResolver.resolve(RSI_PATH)).thenReturn(rsiMainRes);
        list = new ArrayList<>();
        list.add(childRes1);
        Iterator<Resource> itr = list.iterator();
        when(rsiMainRes.listChildren()).thenReturn(itr);
        when(childRes1.getValueMap()).thenReturn(valueMap);
        when(valueMap.get("jcr:primaryType", "")).thenReturn("cq:Page");
        when(childRes1.getPath()).thenReturn("/content/wmrsi/landing-page");
        when(resourceResolver.resolve(childRes1.getPath() + "/jcr:content")).thenReturn(jcrNodeRes);
        when(jcrNodeRes.adaptTo(Node.class)).thenReturn(jcrNode);
        
        // Case: Inactive page
        when(JcrUtils.getStringProperty(jcrNode, "isActive", "false")).thenReturn("false");
        
        landingPageModel.init();
        
        assertTrue(landingPageModel.getMicrosites().isEmpty());
    } catch (Exception e) {
        System.out.println("Exception in testInitWithInactiveChild: " + e);
    }
}

@Test
public void testInitWithEmptyValues() {
    try {
        when(resourceResolver.resolve(RSI_PATH)).thenReturn(rsiMainRes);
        list = new ArrayList<>();
        list.add(childRes1);
        Iterator<Resource> itr = list.iterator();
        when(rsiMainRes.listChildren()).thenReturn(itr);
        when(childRes1.getValueMap()).thenReturn(valueMap);
        when(valueMap.get("jcr:primaryType", "")).thenReturn("cq:Page");
        when(childRes1.getPath()).thenReturn("/content/wmrsi/landing-page");
        when(resourceResolver.resolve(childRes1.getPath() + "/jcr:content")).thenReturn(jcrNodeRes);
        when(jcrNodeRes.adaptTo(Node.class)).thenReturn(jcrNode);
        
        // Case: Empty or null values
        when(JcrUtils.getStringProperty(jcrNode, "jcr:title", StringUtils.EMPTY)).thenReturn("");
        when(JcrUtils.getStringProperty(jcrNode, "cardDescription", StringUtils.EMPTY)).thenReturn("");
        when(JcrUtils.getStringProperty(jcrNode, "cardimage", StringUtils.EMPTY)).thenReturn("");
        
        landingPageModel.init();
        
        assertFalse(landingPageModel.getMicrosites().isEmpty());
        assertNull(landingPageModel.getMicrosites().get(0).getPageTitle());
        assertNull(landingPageModel.getMicrosites().get(0).getPageDescription());
        assertNull(landingPageModel.getMicrosites().get(0).getImagePath());
    } catch (Exception e) {
        System.out.println("Exception in testInitWithEmptyValues: " + e);
    }
}

@Test
public void testInitWithExternalCard() {
    try {
        when(resourceResolver.resolve(RSI_PATH)).thenReturn(rsiMainRes);
        when(rsiMainRes.listChildren()).thenReturn(Collections.emptyIterator());
        
        // Adding external card
        landingPageCards = new ArrayList<>();
        landingPageCards.add(externalCardResource);
        landingPageModel.setLandingPageCards(landingPageCards);
        
        when(externalCardResource.getValueMap()).thenReturn(externalCardResMap);
        when(externalCardResMap.getOrDefault("isActive", StringUtils.EMPTY)).thenReturn("true");
        when(externalCardResMap.getOrDefault("cardTitle", StringUtils.EMPTY)).thenReturn("External Card Title");
        when(externalCardResMap.getOrDefault("cardDescription", StringUtils.EMPTY)).thenReturn("External Card Description");
        when(externalCardResMap.getOrDefault("cardLink", StringUtils.EMPTY)).thenReturn("/content/external-link");
        when(externalCardResMap.getOrDefault("cardimage", StringUtils.EMPTY)).thenReturn("/content/dam/external-image.jpg");
        when(externalCardResMap.getOrDefault("linkwindowtype", "_blank")).thenReturn("_self");
        when(externalCardResMap.getOrDefault("micrositeRank", "0")).thenReturn("2");
        when(externalCardResMap.getOrDefault("linkText", "Explore Now")).thenReturn("Learn More");

        landingPageModel.init();
        
        assertFalse(landingPageModel.getMicrosites().isEmpty());
        assertEquals("External Card Title", landingPageModel.getMicrosites().get(0).getPageTitle());
        assertEquals("Learn More", landingPageModel.getMicrosites().get(0).getLinkText());
    } catch (Exception e) {
        System.out.println("Exception in testInitWithExternalCard: " + e);
    }
}
