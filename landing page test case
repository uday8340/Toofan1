@Test
public void testInit_withValidMicrosite() throws Exception {
    // Mock the resource resolver to return valid resource
    when(resourceResolver.resolve(validPath + "/jcr:content")).thenReturn(rsiMainRes);
    
    // Mock the template to match the microsite template
    ValueMap rsiValueMap = mock(ValueMap.class);
    when(rsiMainRes.getValueMap()).thenReturn(rsiValueMap);
    when(rsiValueMap.get(Constants.CQ_TEMPLATE, String.class)).thenReturn(Constants.MICROSITE_LANDING_TEMPLATE);
    when(rsiMainRes.hasChildren()).thenReturn(true);

    // Mock child resources
    Iterator<Resource> childResourcesIterator = mock(Iterator.class);
    when(rsiMainRes.listChildren()).thenReturn(childResourcesIterator);
    when(childResourcesIterator.hasNext()).thenReturn(true, false);
    when(childResourcesIterator.next()).thenReturn(childResource);
    
    // Mock child resource values
    when(childResource.getPath()).thenReturn("/content/mysite/child");
    Resource jcrContentResource = mock(Resource.class);
    when(resourceResolver.resolve("/content/mysite/child/jcr:content")).thenReturn(jcrContentResource);
    
    // Mock JCR node adaptation and properties
    when(jcrContentResource.adaptTo(Node.class)).thenReturn(jcrNode);
    when(JcrUtils.getStringProperty(jcrNode, "sling:resourceType", "")).thenReturn(Constants.MICROSITE_RESOURCE_TYPE);
    when(JcrUtils.getStringProperty(jcrNode, "isActive", "false")).thenReturn("true");
    when(JcrUtils.getStringProperty(jcrNode, "jcr:title", "")).thenReturn("Test Title");
    when(JcrUtils.getStringProperty(jcrNode, "cardDescription", "")).thenReturn("Test Description");
    when(JcrUtils.getStringProperty(jcrNode, "cardImage", "")).thenReturn("/content/dam/test.jpg");
    when(JcrUtils.getStringProperty(jcrNode, "micrositeRank", "0")).thenReturn("1");

    // Mock dispatcher hostnames and domain names
    when(commonConfiguration.getDispatcherHostName()).thenReturn("dispatcher-host");
    when(commonConfiguration.getRsiDomainName()).thenReturn("rsi-domain");

    // Initialize the model
    landingPageModel.init();
    List<LandingPagePojo> microsites = landingPageModel.getMicrosites();

    // Assertions
    assertNotNull(microsites);
    assertEquals(1, microsites.size());
    assertEquals("Test Title", microsites.get(0).getPageTitle());
    assertEquals("Test Description", microsites.get(0).getPageDescription());
    assertEquals("/content/dam/test.jpg", microsites.get(0).getImagePath());
}
