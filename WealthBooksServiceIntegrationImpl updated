package com.ms.wealthbook.core.service.impl;

import com.ms.wealthbook.core.service.WealthBookServiceIntegration;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.HttpClientUtils;
import org.json.JSONObject;
import org.osgi.service.component.annotations.Component;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.nio.charset.StandardCharsets;

@Component(service = WealthBookServiceIntegration.class)
public class WealthBooksServiceIntegrationImpl implements WealthBookServiceIntegration {

    private static final Logger LOGGER = LoggerFactory.getLogger(WealthBooksServiceIntegrationImpl.class);
    private static final String TARGET_URL = "http://example.com/api/topNavigation";  // Dummy URL

    @Override
    public CloseableHttpResponse sendTopNavigationJson(JSONObject params) {
        CloseableHttpResponse response = null;
        String requestURL = TARGET_URL; // Simulating requestURL retrieval

        try {
            CloseableHttpClient client = HttpClients.createDefault();

            LOGGER.info("Request URL: {}", requestURL);
            LOGGER.info("Sending JSON Payload: {}", params.toString());

            ByteArrayEntity entity = new ByteArrayEntity(params.toString().getBytes(StandardCharsets.UTF_8));

            HttpPost post = new HttpPost(requestURL);
            post.setHeader("Content-Type", "application/json");
            post.setEntity(entity);

            response = client.execute(post);
            
            LOGGER.info("Response Code from Server: {}", response.getStatusLine().getStatusCode());

        } catch (Exception ex) {
            LOGGER.error("Error in sending top navigation JSON", ex);
        } finally {
            HttpClientUtils.closeQuietly(response);
        }
        return response;
    }
}
