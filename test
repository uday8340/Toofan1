(function($, $document) {
    "use strict";

    $document.on("foundation-contentloaded", function(e) {
        // Custom Email Validation
        $.validator.register({
            selector: "[data-validation='emailValidation']",
            validate: function(value) {
                // Basic email structure check (presence of @)
                var emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

                // Check for special characters or spaces
                var invalidCharsPattern = /[^a-zA-Z0-9@._-]/;

                if (!emailPattern.test(value)) {
                    return "Invalid email syntax.";
                }

                if (invalidCharsPattern.test(value)) {
                    return "Email should not contain spaces or special characters.";
                }

                // Validate the domain (after @)
                var domainPart = value.split('@')[1];
                if (domainPart && domainPart.split('.').length < 2) {
                    return "Invalid domain name format.";
                }

                return null; // Valid email
            }
        });
    });

})(jQuery, jQuery(document));


........................

(function($, $document) {
    "use strict";

    $document.on("foundation-contentloaded", function(e) {
        // Custom Email Validation
        $.validator.register({
            selector: "[data-validation='emailValidation']",
            validate: function(value) {
                // Basic email structure check (presence of @ and a valid domain)
                var emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

                // Check for special characters or spaces other than allowed
                var invalidCharsPattern = /[^a-zA-Z0-9@._-]/;

                // Validate the basic email structure
                if (!emailPattern.test(value)) {
                    return "Invalid email syntax. Please enter a valid email.";
                }

                // Check for invalid characters or spaces
                if (invalidCharsPattern.test(value)) {
                    return "Email should not contain spaces or invalid special characters.";
                }

                // Validate the domain part (after @)
                var domainPart = value.split('@')[1];
                if (domainPart && domainPart.split('.').length < 2) {
                    return "Invalid domain name format. Please enter a valid domain.";
                }

                return null; // Email is valid
            }
        });
    });

})(jQuery, jQuery(document));

<input type="text" data-validation="emailValidation" />

var emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
............................

(function($, $document) {
    "use strict";

    $document.on("foundation-contentloaded", function(e) {
        // Custom Email Validation
        $.validator.register({
            selector: "[data-validation='emailValidation']",
            validate: function(value) {
                // Log the entered email value for debugging
                console.log("Entered email: ", value);

                // Check if value is empty
                if (!value) {
                    return "Email cannot be empty.";
                }

                // Basic email structure check (presence of @ and valid domain)
                var emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

                // Check for special characters or spaces other than allowed
                var invalidCharsPattern = /[^a-zA-Z0-9@._-]/;

                // Check for invalid characters first
                if (invalidCharsPattern.test(value)) {
                    console.log("Invalid characters detected in email.");
                    return "Email should not contain spaces or invalid special characters.";
                }

                // Validate the basic email structure
                if (!emailPattern.test(value)) {
                    console.log("Email pattern doesn't match.");
                    return "Invalid email syntax. Please enter a valid email.";
                }

                // Validate the domain part (after @)
                var domainPart = value.split('@')[1];
                if (domainPart && domainPart.split('.').length < 2) {
                    console.log("Invalid domain name format.");
                    return "Invalid domain name format. Please enter a valid domain.";
                }

                // Email is valid
                console.log("Email is valid.");
                return null;
            }
        });
    });

})(jQuery, jQuery(document));


.....................


(function($, $document) {
    "use strict";

    $document.on("foundation-contentloaded", function(e) {
        // Custom Email Validation
        $.validator.register({
            selector: "[data-validation='emailValidation']",
            validate: function(value) {
                // Ensure the value is a string and not an object
                if (typeof value !== "string") {
                    console.log("Value is not a string. Converting to string.");
                    value = String(value);
                }

                // Trim any extra spaces
                value = value.trim();

                // Log the entered email value for debugging
                console.log("Entered email:", value);

                // Basic email structure check: checks for @ and a domain with a .
                var emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

                // Check if email contains spaces or invalid characters
                var invalidCharsPattern = /[\s!#$%^&*()+=\[\]{};':"\\|,<>\/?]/;

                // If invalid characters are found, return error
                if (invalidCharsPattern.test(value)) {
                    console.log("Email contains spaces or invalid special characters.");
                    return "Email should not contain spaces or invalid special characters.";
                }

                // Check if the email format is valid using the basic email structure check
                if (!emailPattern.test(value)) {
                    console.log("Invalid email syntax.");
                    return "Invalid email syntax. Please enter a valid email.";
                }

                // Email is valid if all checks are passed
                console.log("Email is valid.");
                return null;  // No error message, so the email is valid
            }
        });
    });

})(jQuery, jQuery(document));


})(jQuery, jQuery(document));


